<?php

/**
 * @file
 * Hook implementations.
 */


define('ARCHIDORA_RDF_URI', 'http://islandora.ca/archivematica#');
define('ARCHIDORA_OBJ_DELETION', 'isReadyForDeletion');


/**
 * Implements hook_menu().
 */
function archidora_menu() {
  $items = array();

  $items['admin/islandora/archidora'] = array(
    'title' => 'Archivematica Integration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('archidora_admin_form'),
    'access arguments' => array('administer archivematica integration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'includes/admin.form.inc',
  );
  $items['islandora/object/%islandora_object/manage/archivematica'] = array(
    'title' => 'Archivematica',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('archidora_object_status_form', 2),
    'access arguments' => array('administer archivematica integration'),
    'file' => 'includes/object.form.inc',
  );
  $items['islandora/object/%islandora_object/archidora/%/delete'] = array(
    'title' => 'Archivematica Delete Object',
    'type' => MENU_CALLBACK,
    'page callback' => 'archidora_obj_delete_page_callback',
    'page arguments' => array(2),
    'access callback' => 'archidora_obj_delete_access_callback',
    'access arguments' => array(2, 4),
  );
  return $items;
}

/**
 * Implements hook_islandora_derivative().
 */
function archidora_islandora_derivative(AbstractObject $object) {
  $mod_path = drupal_get_path('module', 'archidora');

  $items = array();

  module_load_include('inc', 'archidora', 'includes/utilities');
  $skip_models = archidora_skip_content_models();

  if (count(array_intersect($object->models, $skip_models)) === 0 && archidora_get_parent($object)) {
    $items[] = array(
      'source_dsid' => NULL,
      'destination_dsid' => NULL,
      'weight' => '1000',
      'function' => array(
        'archidora_derivative_callback',
      ),
      'file' => "$mod_path/includes/derivatives.inc",
    );
  }

  return $items;
}

/**
 * Implements hook_permission().
 */
function archidora_permission() {
  return array(
    'administer archivematica integration' => array(
      'title' => t('Administer Archivematica Integration'),
      'description' => t('Administer settings for Archivematica integration and display the Archivematica tab on objects.'),
    ),
  );
}

/**
 * Implements hook_cron().
 */
function archidora_cron() {
  $q = db_select('archidora_aips', 'a')
    ->fields('a', array())
    ->condition('finalized', 0);

  module_load_include('inc', 'archidora', 'includes/archivematica');
  $aips = $q->execute()->fetchAll();
  $to_finalize = array_filter($aips, 'archidora_should_finalize_aip');
  array_map('archidora_finalize_aip', $to_finalize);
}


/**
 * Access callback for updating an object's OBJ's RELS-INT to flag deletion.
 *
 * @param AbstractObject $object
 *   An AbstractObject representing an object within Fedora.
 * @param string $passed_token
 *   The API token defined on the administration page for the module.
 *
 * @return bool
 *   TRUE if allowed, FALSE otherwise.
 */
function archidora_obj_delete_access_callback(AbstractObject $object, $passed_token) {
  $api_token = variable_get('archidora_islandora_api_key', '');
  return !empty($api_token) && $api_token == $passed_token;
}

/**
 * Page callback to flag an object's OBJ datastream for deletion.
 *
 * @param AbstractObject $object
 *   An AbstractObject representing an object within Fedora.
 */
function archidora_obj_delete_page_callback(AbstractObject $object) {
  if (isset($object['OBJ'])) {
    drupal_static_reset('islandora_get_tuque_connection');
    $tuque = islandora_get_tuque_connection(user_load(1));
    $tuque->cache->delete($object->id);
    $non_cached = $tuque->repository->getObject($object->id);
    $rels_exists = $non_cached['OBJ']->relationships->get(ARCHIDORA_RDF_URI, ARCHIDORA_OBJ_DELETION);
    if (empty($rels_exists)) {
      $non_cached['OBJ']->relationships->add(ARCHIDORA_RDF_URI, ARCHIDORA_OBJ_DELETION, 'TRUE', RELS_TYPE_PLAIN_LITERAL);
    }
    watchdog('archidora', 'The object @obj has had its OBJ flagged for deletion!', array('@obj' => $non_cached->id), WATCHDOG_INFO);
  }
  else {
    watchdog('archidora', 'The object @obj does not contain an OBJ datastream to mark for deletion!', array('@obj' => $object->id), WATCHDOG_WARNING);
  }
}

/**
 * Implements hook_islandora_datastream_alter().
 */
function archidora_islandora_datastream_alter(AbstractObject $object, AbstractDatastream $datastream, array &$context) {
  if ($context['action'] == 'purge') {
    $datastream->relationships->remove(ARCHIDORA_RDF_URI, ARCHIDORA_OBJ_DELETION);
  }
}
